# Generated by Django 3.2.16 on 2025-02-11 02:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Blogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='标题')),
                ('abstract', models.CharField(max_length=255, verbose_name='摘要')),
                ('content', models.TextField(verbose_name='内容')),
                ('img', models.ImageField(upload_to='blogs/imgs', verbose_name='封页图')),
                ('readnum', models.IntegerField(default=0, verbose_name='阅读量')),
                ('comment_num', models.IntegerField(default=0, verbose_name='评论量')),
                ('status', models.IntegerField(choices=[(1, '开放'), (2, '冻结')], default=1, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='标签名称')),
                ('describe', models.CharField(max_length=255, verbose_name='标签说明')),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='分类名称')),
                ('describe', models.CharField(max_length=255, verbose_name='分类说明')),
            ],
            options={
                'verbose_name': '分类信息',
                'verbose_name_plural': '分类信息',
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=255, verbose_name='评论内容')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '冻结')], verbose_name='状态')),
                ('createtime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('acceptparent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='accpet', to='blogs.comments', verbose_name='上一级')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='blogs.blogs', verbose_name='博客')),
                ('senduser', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='senduser', to=settings.AUTH_USER_MODEL, verbose_name='评论人')),
                ('targetuser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='acceptuser', to=settings.AUTH_USER_MODEL, verbose_name='接受评论人')),
            ],
        ),
        migrations.AddField(
            model_name='blogs',
            name='tags',
            field=models.ManyToManyField(related_name='tags', to='blogs.Tags', verbose_name='所属标签'),
        ),
        migrations.AddField(
            model_name='blogs',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='blogs.type', verbose_name='所属分类'),
        ),
        migrations.AddField(
            model_name='blogs',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
    ]
